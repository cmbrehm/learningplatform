type Course
  @model(subscriptions: null)
  @auth(
    rules: [
      {allow: owner, ownerField: "teacher", operations: [ create, update, read, delete ]}
      { allow: groups, groups: ["teacher"], operations: [ create ] }
      { allow: groups, groups: ["student"], operations: [ get ] }
    ]
  ) {
  id: ID!
  teacher: String @auth(rules: [{ allow: owner, operations: [create, read, delete] }])
  title: String!
  lessons: [Lesson] @hasMany(indexName: "byCourse", fields: ["id"])
  instances: [CourseInstance] @hasMany(indexName: "byCourse", fields: ["id"])
}

type Lesson
@model(subscriptions: null)
  @auth(
    rules: [
      {allow: owner, ownerField: "teacher", operations: [ update, read, delete ]}
      { allow: groups, groups: ["teacher"], operations: [ create ] }
      { allow: groups, groups: ["student"], operations: [ get ] }
    ]
  ) {
  title: String!
  teacher: String @auth(rules: [{ allow: owner, operations: [create, read, delete] }])
  courseID: ID! @index(name:"byCourse", sortKeyFields: ["title"])
}

type CourseInstance
@model
@auth(
  rules: [
    {allow: owner, ownerField: "teacher", operations: [ update, read, delete ]}
    { allow: groups, groups: ["teacher"], operations: [ create ] }
    { allow: groups, groups: ["student"], operations: [ get ] }
  ]
)
{
  id: ID!
  startDate: String!
  courseID: ID! @index(name:"byCourse", sortKeyFields: ["startDate"])
  registrations: [CourseRegistration] @hasMany(indexName: "byInstance", fields: ["id"])
  teacher: String
}

type CourseRegistration
@model
@auth(
  rules: [
    {allow: owner, ownerField: "studentId", operations: [ update, read, delete ]}
    { allow: groups, groups: ["teacher"], operations: [ update, read ] }
    { allow: groups, groups: ["student"], operations: [ create ] }
  ])
{
  courseInstanceID: ID! @index(name:"byInstance", sortKeyFields: ["studentId"])
  studentId: String
  status: String!
}
